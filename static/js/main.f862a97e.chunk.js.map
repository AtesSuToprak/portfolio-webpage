{"version":3,"sources":["CircularImage/styles.module.css","Header/styles.module.css","CircularImage/image/hakan.jpg","Header/header.js","CircularImage/circularImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","navbar","navbar_bg","headerName","React","Component","CircularImage","circleImage","image_bg","src","require","alt","middle","text","email","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,SAAW,yBAAyB,OAAS,uBAAuB,KAAO,qBAAqB,MAAQ,wB,qBCApKD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,OAAS,uBAAuB,UAAY,4B,yECDtGD,EAAOC,QAAU,IAA0B,mC,mICc5BC,E,iLATX,OACE,yBAAKC,UAAWC,IAAOC,QACrB,yBAAKF,UAAWC,IAAOE,YACvB,wBAAIH,UAAWC,IAAOG,YAAtB,qB,GALaC,IAAMC,W,gBCgDZC,E,iLA9CX,OACE,yBAAKP,UAAWC,IAAOO,aACrB,yBACER,UAAWC,IAAOQ,SAClBC,IAAKC,EAAQ,IACbC,IAAI,iBAEN,yBAAKZ,UAAWC,IAAOY,QACrB,yBAAKb,UAAWC,IAAOa,MACrB,sCACA,2GAIA,uPAMA,oQAMA,0HAIA,8JAIA,0DACA,6BACA,uBAAGd,UAAWC,IAAOc,MAAOC,KAAK,mCAAjC,oB,GAtCgBX,IAAMC,WCUnBW,MATf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.f862a97e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"circleImage\":\"styles_circleImage__Rtmc1\",\"image_bg\":\"styles_image_bg__3DtAE\",\"middle\":\"styles_middle__2031_\",\"text\":\"styles_text__1p4-s\",\"email\":\"styles_email__1GvgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerName\":\"styles_headerName__1-7pP\",\"navbar\":\"styles_navbar__g7Mf0\",\"navbar_bg\":\"styles_navbar_bg__2_c7U\"};","module.exports = __webpack_public_path__ + \"static/media/hakan.2c9a311d.jpg\";","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.navbar}>\r\n        <div className={styles.navbar_bg}></div>\r\n        <h1 className={styles.headerName}>HAKAN YILDIZ</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nclass CircularImage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.circleImage}>\r\n        <img\r\n          className={styles.image_bg}\r\n          src={require(\"./image/hakan.jpg\")}\r\n          alt=\"Hakan Yildiz\"\r\n        />\r\n        <div className={styles.middle}>\r\n          <div className={styles.text}>\r\n            <h3>Hello!</h3>\r\n            <p>\r\n              My history starts here with Food Engineering department in\r\n              Turkey,Gaziantep.\r\n            </p>\r\n            <p>\r\n              This guy \"NEVER,EVER\" wanted to be an \"Engineer\" who would work in\r\n              a factory. But the family issues did not let him choose any other\r\n              departments for his own future. And I actually worked as an\r\n              Engineer for two years.\r\n            </p>\r\n            <p>\r\n              Recently, I have found Re:coded company and had a great chance to\r\n              join the team for my future for the Front-End Development and\r\n              UI&UX Designing, worked hard on it and now I speak outloud with a\r\n              great honor that, I am a developer!\r\n            </p>\r\n            <p>\r\n              My professions are HTML5, CSS3, JavaScript, React, Firebase, Git,\r\n              GitHub. (Only for now...)\r\n            </p>\r\n            <p>\r\n              Right now, I am available for different kind of projects, either\r\n              to help you and to improve myself on different kind of coding!\r\n            </p>\r\n            <p>So, if you want to Hire Me;</p>\r\n            <br />\r\n            <a className={styles.email} href=\"mailto:hakanyildiz248@gmail.com\">\r\n              EMAIL ME!\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CircularImage;\r\n","import React from \"react\";\r\nimport Header from \"./Header/header\";\r\nimport CircularImage from \"./CircularImage/circularImage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <CircularImage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}